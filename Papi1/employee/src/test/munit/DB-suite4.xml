<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="DB-suite4.xml" />
	<munit:test name="DB3-test" doc:id="5126cab5-8480-46ce-92bc-786d94122908" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Write" doc:id="90db135f-8577-42bf-892e-a99792fb4b98" processor="file:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9bd8258f-216b-4691-b5fc-186956268111" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/csv  --- readUrl('classpath://DB3test\mock_payload1.dwl')]" mediaType="application/csv " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="path" value="#[readUrl('classpath://DB3test\mock_variable_9.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="SF" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_10.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="FileName" value="#[readUrl('classpath://DB3test\mock_variable_11.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="data" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_12.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sfData" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_13.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sftpData" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_14.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="DbData" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_15.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="copy" value="#[readUrl('classpath://DB3test\mock_variable_16.dwl')]" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock FilePath1" doc:id="f40e0744-9bd6-43a6-b7d0-36ae184b3b84" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e017142b-3927-4266-a6b4-5ce5a9d9768f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="path" value="#[readUrl('classpath://DB3test\mock_variable_17.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="SF" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_18.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="FileName" value="#[readUrl('classpath://DB3test\mock_variable_19.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="data" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_20.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sfData" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_21.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sftpData" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_22.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="DbData" value="#[output application/json --- readUrl('classpath://DB3test\mock_variable_23.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="copy" value="#[readUrl('classpath://DB3test\mock_variable_24.dwl')]" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f199bd25-7181-4309-a5b4-0c4cf17747fc" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://DB3test\set-event_payload1.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:variables >
					<munit:variable key="path" value="#[readUrl('classpath://DB3test\set-event_variable_9.dwl')]" encoding="UTF-8" />
					<munit:variable key="SF" value="#[output application/json --- readUrl('classpath://DB3test\set-event_variable_10.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="FileName" value="#[readUrl('classpath://DB3test\set-event_variable_11.dwl')]" encoding="UTF-8" />
					<munit:variable key="data" value="#[output application/json --- readUrl('classpath://DB3test\set-event_variable_12.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="sfData" value="#[output application/json --- readUrl('classpath://DB3test\set-event_variable_13.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="sftpData" value="#[output application/json --- readUrl('classpath://DB3test\set-event_variable_14.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="DbData" value="#[output application/json --- readUrl('classpath://DB3test\set-event_variable_15.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="copy" value="#[readUrl('classpath://DB3test\set-event_variable_16.dwl')]" encoding="UTF-8" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to DB3" doc:id="ebcf9522-872a-45b6-b9a5-d7d9760da259" name="DB3"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a7fbeca6-cd02-45eb-a950-affaec235af9" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import DB3test::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
