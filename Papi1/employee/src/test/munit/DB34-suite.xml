<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="DB34-suite.xml" />
	<munit:test name="DB1-test" doc:id="862bbee8-07dd-445a-a450-9f61b8fcfcdd" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock copyFileName" doc:id="7c85eb53-9c82-40f5-b6b8-5eef4f9cf9a2" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="346dbd06-ba5e-4cae-945b-738a589d7e52" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="path" value="#[readUrl('classpath://DB1test\mock_variable_9.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="SF" value="#[output application/json --- readUrl('classpath://DB1test\mock_variable_10.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="FileName" value="#[readUrl('classpath://DB1test\mock_variable_11.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="data" value="#[output application/json --- readUrl('classpath://DB1test\mock_variable_12.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sfData" value="#[output application/json --- readUrl('classpath://DB1test\mock_variable_13.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sftpData" value="#[output application/json --- readUrl('classpath://DB1test\mock_variable_14.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="DbData" value="#[output application/java --- readUrl('classpath://DB1test\mock_variable_15.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="copy" value="#[readUrl('classpath://DB1test\mock_variable_16.dwl')]" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d36a757b-e01b-412e-abf8-ea32862ddae7" >
				<munit:payload value="#[output application/java  --- readUrl('classpath://DB1test\set-event_payload1.dwl')]" encoding="UTF-8" mediaType="application/java " />
				<munit:variables >
					<munit:variable key="path" value="#[readUrl('classpath://DB1test\set-event_variable_9.dwl')]" encoding="UTF-8" />
					<munit:variable key="SF" value="#[output application/json --- readUrl('classpath://DB1test\set-event_variable_10.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="FileName" value="#[readUrl('classpath://DB1test\set-event_variable_11.dwl')]" encoding="UTF-8" />
					<munit:variable key="data" value="#[output application/json --- readUrl('classpath://DB1test\set-event_variable_12.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="sfData" value="#[output application/json --- readUrl('classpath://DB1test\set-event_variable_13.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="sftpData" value="#[output application/json --- readUrl('classpath://DB1test\set-event_variable_14.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="DbData" value="#[output application/java --- readUrl('classpath://DB1test\set-event_variable_15.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="copy" value="#[output application/java --- readUrl('classpath://DB1test\set-event_variable_16.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to DB1" doc:id="6ab17677-88ca-45da-a087-025629c7a86f" name="DB1"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="631c8654-4cf0-4b89-981c-d733a8b04adf" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import DB1test::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
